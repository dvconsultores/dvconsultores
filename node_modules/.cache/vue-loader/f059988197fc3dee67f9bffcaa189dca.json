{"remainingRequest":"/home/frontend3/Documentos/dvconsultores/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/frontend3/Documentos/dvconsultores/src/components/Header/Header.vue?vue&type=style&index=1&id=741978ef&scoped=true&lang=css&","dependencies":[{"path":"/home/frontend3/Documentos/dvconsultores/src/components/Header/Header.vue","mtime":1659646277080},{"path":"/home/frontend3/Documentos/dvconsultores/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/frontend3/Documentos/dvconsultores/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/frontend3/Documentos/dvconsultores/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/frontend3/Documentos/dvconsultores/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/frontend3/Documentos/dvconsultores/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lbnVMb2dPdXQgewogIGN1cnNvcjogcG9pbnRlcjsKfQouZGlhbG9nTG9nSW4gewogIGN1cnNvcjogcG9pbnRlcjsKfQoub3Blbk1lbnVCcmlkZ2VNb2JpbGUgewogIGN1cnNvcjogcG9pbnRlcjsKfQoub3Blbk1lbnVCcmlkZ2UgewogIGN1cnNvcjogcG9pbnRlcjsKfQoub3Blbk1lbnVCYW5kZXJhc01vYmlsZSB7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5vcGVuTWVudUJhbmRlcmFzIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/components/Header","sourcesContent":["<template>\n  <v-app-bar class=\"pt-md-13 pr-md-16 mr-md-6\" color=\"transparent\" absolute>\n    <WalletAlert ref=\"walletAlert\"></WalletAlert>\n\n    <v-row align=\"center\">\n      <!-- mobile -->\n      <v-col cols=\"2\" sm=\"3\" class=\"pt-16 d-flex d-md-none\">\n          <img\n            width=\"100%\"\n            id=\"\"\n            :src=\"`${$store.state.baseURL}themes/${$store.state.theme}/logo.png`\"\n            alt=\"logo\"\n          />\n      </v-col>\n\n      <v-col class=\"pt-16 d-flex d-md-none end\" cols=\"10\" sm=\"9\">\n        <v-btn class=\"botonMenu\" @click.stop=\"drawer = !drawer\">\n          <v-icon medium>mdi-menu</v-icon>\n        </v-btn>\n        <v-navigation-drawer\n        v-model=\"drawer\"\n        absolute\n        height=\"900\"\n        temporary\n        right\n        style=\"z-index:99\"\n        >\n        <v-list>\n          <v-list-item v-for=\"(item, index) in $t('items')\" :key=\"index\" :href=\"item.to\">             \n            <v-list-item-title v-bind:key=\"index\">\n              {{item.name}}\n            </v-list-item-title>\n          </v-list-item>          \n                    \n          <v-list-group offset-y>\n            <template v-slot:activator=\"\">\n              <v-list-item-content>\n                <v-list-item-title>{{$t('idioma')}}</v-list-item-title>\n              </v-list-item-content>\n            </template>         \n            <v-list-item v-for=\"i in $t('languaje')\" :key=\"i\" link\n                    >   \n                    <v-list-item-title\n                      @click=\"flagSelected(i.value)\" class=\"center\" \n                      v-text=\"i.name\"               \n                    >\n                    </v-list-item-title>                     \n            </v-list-item>         \n          </v-list-group>\n                    \n        </v-list>       \n      </v-navigation-drawer>\n      </v-col>\n            \n      <!-- desktop -->\n      <v-row class=\"d-none d-md-flex\">\n        <v-col cols=\"2\">\n          <img\n            id=\"logoPrincipal\"\n            :src=\"`${$store.state.baseURL}themes/${$store.state.theme}/logo.png`\"\n            alt=\"logo\"\n          />\n        </v-col>\n\n        <v-col style=\"margin-left: 44%\" cols=\"4\" class=\"spacea center\">\n          <template v-for=\"(item, index) in $t('items')\">\n            <div v-bind:key=\"index\" id=\"ajustarHeader\">\n              <a\n                :href=\"item.to\"\n                id=\"texts\"\n                class=\"h7-em\"\n                :class=\"{ openMenuBridge: item.open }\"\n              >\n                {{ item.name }}\n              </a>\n            </div>\n          </template>\n\n          <v-btn class=\"boton eliminarMobile3 openMenuBanderas\">\n            <img class=\"bandera\" :src=\"idiomaA\" alt=\"bandera\" />\n          </v-btn>\n        </v-col>\n\n        <v-row align=\"center\" justify=\"end\">\n          <v-col class=\"padd2\">\n            <div style=\"display: flex; justify-content: end\">\n              <v-tooltip color=\"transparent\" bottom open-delay=\"500\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-if=\"!IconoTheme\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    @click=\"CambiarTheme('dark')\"\n                    class=\"pa-0\"\n                    height=\"0px\"\n                  >\n                    <img src=\"../../assets/images/botonTema1.png\" alt=\"\" />\n                  </v-btn>\n                  <v-btn\n                    v-else\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    @click=\"CambiarTheme('light')\"\n                    class=\"pa-0\"\n                    height=\"0px\"\n                  >\n                    <img src=\"../../assets/images/botonTema2.png\" alt=\"\" />\n                  </v-btn>\n                </template>\n                <!-- <div id=\"tooltip\">\n                    <span>{{ $t(\"theme\") }}</span>\n                  </div> -->\n              </v-tooltip>\n            </div>\n          </v-col>\n        </v-row>\n      </v-row>\n    </v-row>\n    <MenuHeader></MenuHeader>\n  </v-app-bar>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport MenuHeader from \"./MenuHeader.vue\";\nimport WalletAlert from \"@/components/Header/WalletAlert.vue\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"38b8c05faaa6499990c3af539358ae4e\",\n    },\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  cacheProvider: true,\n  providerOptions,\n});\n\nexport default {\n  name: \"Header\",\n  i18n: require(\"./i18n\"),\n  components: {\n    WalletAlert,\n    MenuHeader,\n  },\n  data() {\n    return {\n      element: null,\n      IconoTheme: true,\n      drawer: false,\n      idioma: \"US\",\n      chainId: null,\n      instance: null,\n      account: null,\n      signer: null,\n      provider: null,\n      idiomaA: require(\"@/assets/banderas/USA.png\"),\n    };\n  },\n  created() {\n    this.element = document.getElementById(\"theme\");\n    const theme = localStorage.getItem(\"theme\");\n    if (theme) {\n      this.CambiarTheme(theme);\n    }\n    if (theme == \"dark\") {\n      this.IconoTheme = true;\n    }\n    if (theme == \"light\") {\n      this.IconoTheme = false;\n    }\n  },\n  mounted() {\n    this.data = this.$t(\"dataDrawer\");\n  },\n  computed: {\n    computedItems() {\n      return this.data.map(this.mapItem);\n    },\n  },\n  methods: {\n    async logOut() {\n      await web3Modal.clearCachedProvider();\n      this.account = null;\n      this.instance = null;\n      this.provider = null;\n      this.chainId = null;\n    },\n    async connectWallet() {\n      this.instance = await web3Modal.connect();\n\n      this.provider = new ethers.providers.Web3Provider(this.instance);\n      this.signer = this.provider.getSigner();\n      this.chainId = this.instance.chainId;\n      this.account = this.instance.selectedAddress;\n      // Subscribe to accounts change\n      this.instance.on(\"accountsChanged\", (accounts) => {\n        this.account = accounts[0];\n      });\n\n      // Subscribe to chainId change\n      this.instance.on(\"chainChanged\", (chainId) => {\n        this.chainId = chainId;\n      });\n\n      // Subscribe to provider connection\n      this.instance.on(\"connect\", (info) => {\n        this.chainId = info.chainId;\n      });\n\n      // Subscribe to provider disconnection\n      this.instance.on(\"disconnect\", (error) => {\n        console.log(error);\n      });\n    },\n    async switchNetwork() {\n      try {\n        const ethereum = this.instance;\n        const data = [\n          {\n            chainId: \"0x2329\",\n            chainName: \"Evmos\",\n            nativeCurrency: {\n              name: \"EVMOS\",\n              symbol: \"EVMOS\",\n              decimals: 18,\n            },\n            rpcUrls: [\"https://eth.bd.evmos.org:8545\"],\n          },\n        ];\n\n        const tx = await ethereum\n          .request({ method: \"wallet_addEthereumChain\", params: data })\n          .catch();\n\n        if (tx) {\n          // console.log(tx);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    CambiarTheme(theme) {\n      this.$store.dispatch(\"CambiarTheme\", { theme, element: this.element });\n      this.IconoTheme = !this.IconoTheme;\n    },\n    changeArrow(item) {\n      item.open = !item.open;\n    },\n    changeArrowFocusOut(item) {\n      if (item.open === false) {\n        item.open = !item.open;\n      }\n    },\n    flagSelected(item) {\n      this.idiomaA = item.country;\n      this.dataDrawerB[1].title = item.name;\n    },\n  },\n};\n</script>\n\n<style src=\"./Header.scss\" lang=\"scss\"></style>\n<style scoped>\n.menuLogOut {\n  cursor: pointer;\n}\n.dialogLogIn {\n  cursor: pointer;\n}\n.openMenuBridgeMobile {\n  cursor: pointer;\n}\n.openMenuBridge {\n  cursor: pointer;\n}\n.openMenuBanderasMobile {\n  cursor: pointer;\n}\n.openMenuBanderas {\n  cursor: pointer;\n}\n</style>\n"]}]}